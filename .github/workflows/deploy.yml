name: Deploy Node.js Application

on:
  workflow_dispatch:

jobs:
  deploy_application:
    name: Deploy Node.js Application
    runs-on: ubuntu-latest

    env:
      DOCKER_IMAGE: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ vars.REPOSITORY_NAME  }}:latest
      AWS_ACCOUNT_ID: ${{secrets.AWS_ACCOUNT_ID}}
      AWS_REGION: "us-east-1"
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      TOKEN_KEY: ${{ secrets.APP_TOKEN_KEY }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: ${{ secrets.AWS_ACCOUNT_ID }}
          rolesrole-to-assume: ${{ secrets.AWS_ECR_GITHUB_ROLE }}

      - name: Build Docker image
        run: "docker build -t $DOCKER_IMAGE ."

      - name: Tag Docker image
        run: "docker tag $DOCKER_IMAGE $DOCKER_IMAGE"

      - name: Push Docker image to ECR
        run: "docker push $DOCKER_IMAGE"

      - name: EC2 Instance IP
        run: 'echo "Public IP: ${{ secrets.EC2_PUBLIC_IP }}"'
      - name: Write ENV file
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          envs: DOCKER_IMAGE,AWS_ACCOUNT_ID,AWS_REGION,AWS_DATABASE_URL
          scripts: |

      - name: Deploy Docker container on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_PUBLIC_IP }}
          username: ec2-user
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          envs: DOCKER_IMAGE,AWS_ACCOUNT_ID,AWS_REGION,DATABASE_URL
          script: |
            export DOCKER_IMAGE=$DOCKER_IMAGE
            echo "docker version: $(docker -v)"
            echo "docker image: $DOCKER_IMAGE"
            echo "logging with ecr"
            aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
            echo "[containers] \n$(docker ps -a --format "{{.ID}} {{.Image}}")"
            docker pull $DOCKER_IMAGE
            docker stop $(docker ps -a -q)
            docker rm $(docker ps -a -q)
            docker run -d -p 80:4000 -e TOKEN_KEY=$TOKEN_KEY -e DATABASE_URL=$DATABASE_URL $DOCKER_IMAGE
